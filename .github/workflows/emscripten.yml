name: Test Pyodide build

on:
  push:
    branches:
      # Runs on every merge to main to upload .dev0 wheels to anaconda.org
      - main
      - v1.**
  pull_request:
    branches:
      - main
      - v1.**
  # Make it possible to upload wheels manually if needed
  workflow_dispatch:
    inputs:
      push_wheels:
        description: >
          'Push wheels to Anaconda if "true". Default is "false". Warning: this will overwrite existing wheels.'
        required: false
        default: "false"
  # Upload wheels to anaconda.org on a schedule
  schedule:
    # Run at 0300 hours on days 3 and 17 of the month
    - cron: "0 3 3,17 * *"
  # Make it possible for other workflows to call this workflow // DEBUGGING
  workflow_call:

env:
  FORCE_COLOR: 3

jobs:
  build_wasm_emscripten:
    name: Build PyWavelets for Pyodide
    runs-on: ubuntu-latest
    # Uncomment the following line to test changes on a fork
    # if: github.repository == 'PyWavelets/pywt'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.2"

      - name: Install prerequisites
        run: |
          python -m pip install pyodide-build "pydantic<2"
          echo EMSCRIPTEN_VERSION=$(pyodide config get emscripten_version) >> $GITHUB_ENV

      - name: Set up Emscripten toolchain
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{ env.EMSCRIPTEN_VERSION }}
          actions-cache-folder: emsdk-cache

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "18"

      - name: Build PyWavelets
        run: |
          pyodide build

      - name: Install and test wheel
        run: |
          pyodide venv .venv-pyodide
          source .venv-pyodide/bin/activate
          pip install dist/*.whl
          pushd demo
          pip install matplotlib pytest
          python -c "import pywt; print(pywt.__version__)"
          pytest --pyargs pywt -m "not slow"

        # https://anaconda.org/scientific-python-nightly-wheels/pywavelets
        # WARNING: this job will overwrite existing wheels.
      - name: Push to Anaconda PyPI index
        if: (github.repository == 'PyWavelets/pywt') && (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.push_wheels == 'true') || (github.event_name == 'schedule')
        uses: scientific-python/upload-nightly-action@b67d7fcc0396e1128a474d1ab2b48aa94680f9fc # v0.5.0
        with:
          artifacts_path: dist/
          anaconda_nightly_upload_token: ${{ secrets.ANACONDA_ORG_UPLOAD_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: dist/

  # build docs with sphinx and deploy to GitHub Pages
  build_docs:
    needs: [build_wasm_emscripten]
    name: Build and deploy docs
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install prerequisites
        run: |
          python -m pip install -r util/readthedocs/requirements.txt
          pip install . -v

      - name: Download PyWavelets Emscripten/Pyodide wheel
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true

      - name: Download Pyodide distribution from GitHub Releases
        run: |
          curl -LJO https://github.com/pyodide/pyodide/releases/download/0.25.1/pyodide-0.25.1.tar.bz2
          # upstream bug: .cache/pyodide/pyodide/pyodide referenced instead of custom path .cache/pyodide/custom_pyodide/pyodide?
          mkdir pywavelets_custom_pyodide_dist
          tar -xjf pyodide-0.25.1.tar.bz2 -C pywavelets_custom_pyodide_dist

          # Delete the PyWavelets package from the distribution
          rm -rf pywavelets_custom_pyodide_dist/pyodide/PyWavelets-*.whl
          rm -rf pywavelets_custom_pyodide_dist/pyodide/pywavelets-*.whl.metadata

          # Copy the PyWavelets wheel artifact to the distribution
          cp dist/*.whl pywavelets_custom_pyodide_dist/pyodide/

      - name: Build docs
        # env:
        # Set URL to new local Pyodide distribution
        # Bug: not working with relative URLs/filepath, use absolute path for now
        # Not working with files in doc/source/ directory either, so use from root
        # JUPYTERLITE_PYODIDE_URL: ${{ github.workspace }}/pywavelets_custom_pyodide_dist/pyodide/
        # still doesn't work
        run: |
          # sphinx-build -b html doc/source/ doc/build/ does not work for some reason, but make html does
          cd doc && make html && cd ..
          # Move Pyodide distribution folder + contents to the built docs where jupyter-lite.json expects it
          mv pywavelets_custom_pyodide_dist doc/build/lite/

      - name: Debug docs
        run: |
          echo "Contents of doc/source/:"
          ls -R doc/source/
          echo "Contents of doc/build/:"
          ls -R doc/build/

      - name: Debug jupyter-lite.json
        run: |
          echo "Contents of doc/source/jupyter-lite.json:"
          cat doc/source/jupyter-lite.json
          echo "Contents of doc/build/lite/jupyter-lite.json:"
          cat doc/build/lite/jupyter-lite.json
          echo "Contents of doc/build/lite/pywavelets_custom_pyodide_dist/pyodide/:"
          ls -R doc/build/lite/pywavelets_custom_pyodide_dist/pyodide/

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: doc/build/
          publish_branch: gh-pages
          user_name: "agriyakhetarpal"
          user_email: "74401230+agriyakhetarpal@users.noreply.github.com"
